package org.hisp.dhis.rules.models;

import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

/**
 *
 * @param data dynamic data which can be potentially
 *      generated by the RuleEngine.
 * @param content a static content which will
 *      be shown to the user.
 * @param location location of where the result of this
 *      action must be rendered: can be either 'feedback'
 *      or 'program indicator' widget.
 */
public record RuleActionText(
        @Nonnull String data,
        @Nonnull String content,
        @Nonnull String location
) implements RuleAction {

    public static final String LOCATION_FEEDBACK_WIDGET = "feedback";
    public static final String LOCATION_INDICATOR_WIDGET = "indicators";

    @Nonnull
    public static RuleActionText createForFeedback(
            @CheckForNull String content, @CheckForNull String data )
    {
        if ( content == null && data == null )
        {
            throw new IllegalArgumentException( "Both content and data must not be null" );
        }

        return new RuleActionText(data == null ? "" : data, content == null ? "" : content, LOCATION_FEEDBACK_WIDGET);
    }

    @Nonnull
    public static RuleActionText createForIndicators(
            @CheckForNull String content, @CheckForNull String data )
    {
        if ( content == null && data == null )
        {
            throw new IllegalArgumentException( "Both content and data must not be null" );
        }

        return new RuleActionText(data == null ? "" : data, content == null ? "" : content, LOCATION_INDICATOR_WIDGET);
    }
}
